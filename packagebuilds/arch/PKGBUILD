# Maintainer: Batuhan Baserdem <baserdem.batuhan@gmail.com>
pkgbase=sbp
pkgname=(
    'sbp-base'
    'sbp-efi'
    'sbp-desktop'
    'sbp-devel'
    'sbp-server'
    'sbp-laptop'
    'sbp-workstation')
pkgver=0.0.1
pkgrel=1
pkgdesc="Meta package to automate packages computer systems"
arch=('any')
url="https://github.com/bbaserdem/dotfiles"
licence=(MIT)
groups=(bbaserdem)
source=(
    'base.btaudio'
    'base.fixed-bitmap'
    'base.inotify'
    'base.install'
    'base.reflector.service'
    'base.reflector.timer'
    'base.snapper-root'
    'base.sudoers'
    'base.sysctl'
    'base.vconsole'
    'base.wired'
    'base.wireless'
    'efi.hardened'
    'efi.install'
    'efi.longterm'
    'efi.signscript'
    'efi.stable'
    'efi.zen'
    'desktop.install'
    'devel.install'
    'laptop.backlight'
    'laptop.battery'
    'laptop.install'
    'laptop.touchpad'
    'server.install'
    'workstation.install')
md5sums=('01f4af660187b09d79d709fdfd2f2e43'
         'c3fad1964fce11da4879f823d3d1c2fe'
         'b203bbd5802d1bb3df82a908f0f276f2'
         '76bf8b92b07d1c26952791729d223cf2'
         '678a5325cbacc04df3c854d468fc57f4'
         'e3b5ed70982addb05feaa47f377613e7'
         '58e4c2d6c0a89a499ee9c432e316c412'
         '74f75149a93d5773d79f61d2f943211d'
         'd0bfbc2bf404bd0ef1b5fac41126b314'
         '7da9b874efdc857777d586298a9d208c'
         '0ed16bddac9d24946c8d0d73c9a41610'
         'f186f66617b5da25d75d734bc18c5446'
         '5658cb4411ee8814c421ec38a15759bc'
         '39e9766de5d4cd13529f8d5e2727b59b'
         'f80d4f01f858e5521968d02ea10b0074'
         'e3217b4c75d3bc302347b7bdf27f29de'
         'f0a9613c424243d2480eadf8855ad292'
         '27ce407a0ed9cc46a56bc1b38d2f5328'
         'bcb71801be3a663484e9f2f569da08f3'
         '36adcc034c7a69ffe93e2c0937f051da'
         '28429e1b4adb07286f6ea670f422f00d'
         '90792a95f9d8f9d0c8bb19aed841a8f1'
         'ca2d52b2899a47fa7770ffd31f162f08'
         '5b7dcdc44de198c4629e8c08626f88dc')
validpgpkeys=(
    '0B7151C823559DD8A7A04CE36426139E2F4C6CCE')

package_sbp-base() {
    provides=(nano vim vi)
    conflicts=(nano vim vi)
    install=base.install

    # Base and base-devel group
    # Removed; netctl, nano, vi, reiserfsprogs
    depends=(
        'bash'          'bzip2'         'coreutils'     'cryptsetup'
        'device-mapper' 'dhcpcd'        'diffutils'     'e2fsprogs'
        'file'          'filesystem'    'findutils'     'gawk'
        'gcc-libs'      'gettext'       'glibc'         'grep'
        'gzip'          'inetutils'     'iproute2'      'iputils'
        'jfsutils'      'less'          'licenses'      'linux'
        'logrotate'     'lvm2'          'man-db'        'man-pages'
        'mdadm'         'pacman'        'pciutils'
        'pcmciautils'   'perl'          'procps-ng'     'psmisc'
        's-nail'        'sed'           'shadow'        'tar'
        'sysfsutils'    'systemd-sysvcompat'            'texinfo'
        'usbutils'      'util-linux'    'which'         'xfsprogs'
        'autoconf'      'automake'      'binutils'      'bison'
        'fakeroot'      'file'          'findutils'     'flex'
        'gawk'          'gcc'           'gettext'       'grep'
        'groff'         'gzip'          'libtool'       'm4'
        'make'          'pacman'        'patch'         'pkgconf'
        'sed'           'sudo'          'systemd'       'texinfo'
        'util-linux'    'which'         'btrfs-progs'   'f2fs-tools'
        'bluez'
        'bluez-libs'
        'bluez-utils'
        'pulseaudio-bluetooth'
        'abcde'                         # CD ripper
        'asp'                           # Arch Source Package management
        'atool'                         # Archive tool for following formats;
        'bzip2' 'cpio' 'gzip' 'lhasa' 'lzop' 'p7zip' 'tar' 'unace'
        'unrar' 'unzip' 'xz' 'zip'
        'bash-completion'               # Programmable completion for bash
        'cpupower'                      # CPU scaling user utility
        'cups' 'cups-pdf' 'cups-pk-helper'  # Printing
        'discount'                      # Markdown implementation
        'flatpak'                       # Jailed software repository
        'geoip' 'geoip-database-extra'  # IP to location resolver
        'git'                           # Version control tool
        'gnupg'                         # GPG verifications
        'imagemagick'                   # Commandline image manipulator
        'jq' 'yajl'                     # JSON processor
        'languagetool'                  # Grammar checker
        'linux-firmware'                # Firmware for the Linux kernel
        'linux-headers'                 # Kernel headers
        'msmtp' 'msmtp-mta'             # SMTP client for mailing
        'offlineimap' 'notmuch'         # IMAP mail fetcher (and organizer)
        'nftables'                      # Firewall
        'pacman-contrib'                # Tools for pacman
        'powerline-fonts'               # Fonts for powerline symbols (console)
        'pass' 'qrencode'               # Password manager
        'reflector'                     # Pacman mirror sorting
        'rsync'                         # File synching utility
        'snapper'                       # BTRFS snapshot manager
        'sshfs' 'openssh' 'fuse3'       # SSH and FUSE for ssh
        'sudo'                          # To check your privilage
        'tor'                           # TOR Onion network
        'tmux'                          # Terminal multiplexer
        'openconnect' 'openvpn'         # VPN services
        'wine'                          # Windows compatibility
        'wpa_supplicant'                # Wireless connection supplicant
        'zsh'                           # Interactive shell
        'alsa-utils' 'lib32-alsa-plugins'                       # ALSA
        'pulseaudio' 'lib32-libpulse' 'pamixer' 'pavucontrol'   # Pulseaudio
        'pulseaudio-alsa'                                       # Pulse plugins
        'mpc' 'mpd'                                             # Music daemon
        'calcurse'                                  # Calender
        'htop'                                      # Process viewer
        'ncmpcpp'                                   # Music player
        'neofetch'                                  # System info printer
        'neomutt'                                   # Mail reader
        'neovim' 'python-neovim' 'python2-neovim'   # Text editor
        'newsboat'                                  # RSS/Atom feed
        'parted'                                    # Partition manager
        'ranger'                                    # File browser
        'syncthing'                                 # File syncing
        'task'                                      # Taskwarrior tasks manager
        'w3m')                                      # Console based web browser
    install -Dm 0644 base.btaudio "${pkgdir}/etc/bluetooth/audio.conf"
    install -Dm 0644 base.fixed-bitmap "${pkgdir}/etc/fonts/conf.avail/90-fixed-bitmaps.conf"
    install -Dm 0644 base.inotify "${pkgdir}/etc/sysctl.d/01-inotify.conf"
    install -Dm 0644 base.reflector.service "${pkgdir}/etc/systemd/system/reflector.service"
    install -Dm 0644 base.reflector.timer "${pkgdir}/etc/systemd/system/reflector.timer"
    install -Dm 0644 base.snapper-root "${pkgdir}/etc/snapper/configs/root"
    install -Dm 0640 base.sudoers "${pkgdir}/etc/sudoers.d/sbp-base"
    install -Dm 0644 base.sysctl "${pkgdir}/etc/sysctl.d/01-sysctl.conf"
    install -Dm 0644 base.vconsole "${pkgdir}/etc/vconsole.conf"
    chmod 750 /.snapshots
    install -dm 0755 "${pkgdir}/usr/bin"
    ln -s /usr/bin/nvim "${pkgdir}/usr/bin/vim"
    ln -s /usr/bin/nvim "${pkgdir}/usr/bin/nano"
    ln -s /usr/bin/nvim "${pkgdir}/usr/bin/vi"

}

package_sbp-efi() {
    depends=('efitools' 'sbsigntools')
    install=efi.install
    install -Dm 0755 efi.signscript "${pkgdir}/etc/sbkeys/sbsign.sh"
    install -Dm 0644 efi.stable "${pkgdir}/etc/pacman.d/hooks/11-stable.hook"
    install -Dm 0644 efi.longterm "${pkgdir}/etc/pacman.d/hooks/12-longterm.hook"
    install -Dm 0644 efi.hardened "${pkgdir}/etc/pacman.d/hooks/12-hardened.hook"
    install -Dm 0644 efi.zen "${pkgdir}/etc/pacman.d/hooks/13-zen.hook"
}

package_sbp-desktop() {
    depends=('sbp-base')
    install=desktop.install
    # X-org and wayland stuff
    # Window-manager and related
    depends+=(
        'xorgproto'             'xf86-video-vesa'       'xorg-bdftopcf'
        'xorg-docs'             'xorg-font-util'        'xorg-fonts-100dpi'
        'xorg-fonts-75dpi'      'xorg-fonts-encodings'  'xorg-iceauth'
        'xorg-luit'             'xorg-mkfontdir'        'xorg-mkfontscale'
        'xorg-server'           'xorg-server-common'    'xorg-server-devel'
        'xorg-server-xdmx'      'xorg-server-xephyr'    'xorg-server-xnest'
        'xorg-server-xvfb'      'xorg-server-xwayland'  'xorg-sessreg'
        'xorg-setxkbmap'        'xorg-smproxy'          'xorg-x11perf'
        'xorg-xauth'            'xorg-xbacklight'       'xorg-xcmsdb'
        'xorg-xcursorgen'       'xorg-xdpyinfo'         'xorg-xdriinfo'
        'xorg-xev'              'xorg-xgamma'           'xorg-xhost'
        'xorg-xinput'           'xorg-xkbcomp'          'xorg-xkbevd'
        'xorg-xkbutils'         'xorg-xkill'            'xorg-xlsatoms'
        'xorg-xlsclients'       'xorg-xmodmap'          'xorg-xpr'
        'xorg-xprop'            'xorg-xrandr'           'xorg-xrdb'
        'xorg-xrefresh'         'xorg-xset'             'xorg-xsetroot'
        'xorg-xvinfo'           'xorg-xwd'              'xorg-xwininfo'
        'xorg-xwud'             'wayland'               'xf86-input-libinput'
        'bspwm'             # Tiling window manager
        'compton'           # Compositor for X
        'dunst'             # Notification daemon
        'feh'               # Wallpaper management
        'i3lock'            # Screen locker
        'maim'              # Screenshot utility
        'redshift'          # Screen dimmer
        'rofi'              # Application launcher
        'sxhkd'             # Simple X HotKey Daemon
        'sway'              # i3 replacement for wayland
        'wireless_tools'    # Wireless info parse
        'wmname'            # Window manager name changer
        'mpv'               # Video player daemon
        'pdfjs'             # PDF rendering to webpages
        'polkit'            # Policykit for authentication
        'polkit-gnome'
        'nemo'              # File browser
        'nemo-python'
        'qt4'               # QT implementation
        'trash-cli'         # Trash can
        'tumbler'           # Thumbnails
        'udiskie'           # Mount manager
        'xsel'              # Select text/area
        'audacity'          # Audio manipulator
        'blender'           # 3d designing utility
        'cantata'           # MPD frontend
        'cdparanoia'
        'freerdp'
        'gimp'
        'gitg'
        'gourmet'
        'gparted'
        'inkscape'
        'kitty'
        'libreoffice-fresh'
        'pdfsam'
        'projectm-pulseaudio'
        'picard'
        'openscad'
        'ristretto'
        'smplayer'
        'qutebrowser'
        'stellarium'
        'syncthing-gtk'
        'termite'
        'udisks2'
        'virt-manager'
        'zathura-pdf-poppler'
        'arc-gtk-theme'
        'elementary-icon-theme'
        'gnome-themes-extra'
        'gtk-engine-murrine'
        'gtk2fontsel'
        'gucharmap'
        'papirus-icon-theme'
        'qt5-styleplugins'
        'tamsyn-font'
        'otf-fira-code'
        'ttf-gentium'
        'ttf-hack'
        'ttf-liberation'
        'noto-fonts-emoji')
}

package_sbp-devel() {
    depends=('sbp-base')
    install=devel.install
    # C developement
    depends+=(
        'clang'
        'arduino'           # Arduino developement
        'arduino-docs'
        'arm'
        'arm-none-eabi-binutils'
        'arm-none-eabi-gcc'
        'arm-none-eabi-newlib'
        'avr-binutils'
        'avr-gcc'
        'avr-libc'
        'avrdude'
        'dfu-util'          # Dfu-programmer is in aur
        'android-tools'     # Android developement
        'libmtp'
        'bpython'           # Python developement
        'jupyter-nbconvert'
        'jupyter-notebook'
        'lapack'
        'mathjax'
        'openblas'
        'python-matplotlib'
        'python-pandas'
        'python-pip'
        'python-scikit-learn'
        'python-sympy'
        'python-neovim'
        'python-numpy'
        'python-virtualenv'
        'python-xdg'
        'python2-pip'
        'jre7-openjdk'      # Java, matlab things and octave
        'jre8-openjdk'
        'jre9-openjdk'
        'jre10-openjdk'
        'octave'
        'biber'             # LaTeX
        'texlive-core'
        'texlive-fontsextra'
        'texlive-latexextra'
        'texlive-pictures'
        'texlive-pstricks'
        'texlive-science'
        'dnsmasq'           # Virtualization, QEMU
        'firewalld'
        'libvirt'
        'qemu'
        'qemu-arch-extra')
}

# Server packages;
#   These packafes should not need xorg, must be settable from console`
package_sbp-server() {
    depends=('sbp-base')
    install=server.install
    depends+=(
        'apache'
        'dovecot'
        'kodi'
        'mariadb'
        'postfix'
        'rspamd'
        'transmission-cli')
}

# Computer specific stuff
package_sbp-laptop() {
    depends=('sbp-base' 'sbp-efi' 'sbp-devel' 'sbp-desktop')
    install=laptop.install
    depends+=(
        'mesa'
        'mesa-demos'
        'lib32-mesa'
        'libva-mesa-driver'
        'lib32-libva-mesa-driver'
        'lib32-mesa-demos'
        'mesa-vdpau'
        'libva-vdpau-driver'
        'lib32-mesa-vdpau'
        'libva-vdpau-driver'
        'libva-mesa-driver'
        'xf86-video-amdgpu'
        'vulcan-radeon'
        'tlp'
        'steam'
        'steam-native-runtime')
    install -Dm 0644 laptop.backlight "${pkgdir}/etc/udev/rules/90-backlight.rules"
    install -Dm 0644 laptop.battery "${pkgdir}/etc/udev/rules/91-battery.rules"
    install -Dm 0644 laptop.touchpad "${pkgdir}/etc/X11/xorg.conf.d/30-touchpad.conf"
}

package_sbp-workstation() {
    depends=('sbp-base' 'sbp-devel' 'sbp-desktop')
    install=workstation.install
    depends+=(
        'grub'
        'nvidia-340xx-lts'
        'lib32-nvidia-340xx-utils'
        'linux-lts'
        'linux-lts-headers'
        'lm_sensors')
}
