#!/bin/dash

# Depends on: mpd, mpc, (mpdscribble)

# Kill all descendents on exit
trap 'kill $(list_children $$) 2>/dev/null' INT QUIT KILL TERM PIPE HUP

list_children () 
{
    local children=$(ps -o pid= --ppid "$1")
    for pid in $children
    do
        list_children "$pid"
    done
    echo "$children"
}

_len=32
_left='/usr/bin/mpc toggle >/dev/null'
_down='/usr/bin/mpc >/dev/null'
_up='/usr/bin/mpc prev >/dev/null'

get_text () {
    _mute='false'

    _out="$(mpc $_pass status | head -n 1)"
    if [ "${#_out}" -gt "${_len}" ] ; then
        _out="$(echo $_out | awk "{print substr(\$0,1,${_len});}")…"
    fi

    _pre="$(mpc $_pass status | tail -n 2 | head -n 1 | awk '{print $1}')"

    if [ -z "${_out}" ] ; then
        _out="--"
        _mute='true'
    elif [ "${_pre}" = "[paused]" ] ; then
        _mute='true'
    elif echo "${_pre}" | grep -q 'volume:'; then
        _out='Empty playlist…'
        _mute='true'
    elif echo "${_pre}" | grep -q "Updating" ; then
        _out='DB Update…'
        _mute='true'
    fi

    if pgrep mpdscribble >/dev/null ; then
        _suf=" "
    else
        _suf=''
    fi

    _js="{ \"format\":\"${_out}\", \"prefix\":\" \", \"mute\":${_mute}"
    _js="${_js}, \"on-scroll-down\":\"${_down}\", \"on-scroll-up\":\"${_up}\""
    echo "${_js}, \"on-click\":\"${_left}\", \"suffix\":\"${_suf}\" }"
    
}

while : ; do
    get_text
    sleep .2
    mpc idle > /dev/null
done
