#!/bin/bash
# Wraps aursync command to mount an amazon s3 bucket which contains a repository
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Locations
REPO_NAME=sbp
REMOTE_PATH=s3://sbp-arch/repo
LOCAL_PATH="${HOME}/.cache/${REPO_NAME}-repo"
BUILD_PATH="${HOME}/.cache/${REPO_NAME}-build"
SOURCE_PATH="${HOME}/.config/arch"
CHROOT="${HOME}/.cache/${REPO_NAME}-chroot"

mkdir -p "${LOCAL_PATH}"
mkdir -p "${BUILD_PATH}" & rm -rf "${BUILD_PATH}/"*
mkdir -p "${CHROOT}"

## Create the chroot if not present
[[ -d "${CHROOT}/root" ]] || mkarchroot -C /etc/pacman.conf \
    -M /etc/makepkg.conf "$CHROOT/root" base base-devel

## Sync remote DB to local
s3cmd sync "${REMOTE_PATH}/${REPO_NAME}.db.tar.xz"    "${LOCAL_PATH}/"
ln -sf      "${LOCAL_PATH}/${REPO_NAME}.db.tar.xz"    "${LOCAL_PATH}/$REPO_NAME.db"
s3cmd sync "${REMOTE_PATH}/${REPO_NAME}.files.tar.xz" "${LOCAL_PATH}/"
ln -sf      "${LOCAL_PATH}/${REPO_NAME}.files.tar.xz" "${LOCAL_PATH}/$REPO_NAME.files"

## Copy package to build path, build package and upload it
for _arg in "${@}"; do
    [[ -d "${_arg}" ]] || continue
    cp -r "${_arg}" "${BUILD_PATH}/"
    _loc="${BUILD_PATH}/$(basename "${_arg}")"
    cd "${_loc}"
    updpkgsums
    rm -f *.pkg.tar.xz
    makechrootpkg -cur "${CHROOT}"
    cd -
    for _file in "${_loc}/"*.pkg.tar.xz ; do
        [ -f "${_file}" ] || break
        repo-add "${LOCAL_PATH}/${REPO_NAME}.db.tar.xz" "${_file}"
        s3cmd sync --follow-symlinks --acl-public "${_file}" "${REMOTE_PATH}/"
    done
done

## Sync local database to remote
s3cmd sync --follow-symlinks --acl-public \
    "${LOCAL_PATH}/${REPO_NAME}.db"    "${LOCAL_PATH}/${REPO_NAME}.db.tar.xz" \
    "${LOCAL_PATH}/${REPO_NAME}.files" "${LOCAL_PATH}/${REPO_NAME}.files.tar.xz" \
    "${REMOTE_PATH}/"
