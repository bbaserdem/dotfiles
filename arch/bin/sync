#!/usr/bin/bash
# Wraps aursync command to mount an amazon s3 bucket which contains a repository
set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Locations
REPO_NAME=sbp
REMOTE_PATH=s3://sbp-arch/repo
LOCAL_PATH="${HOME}/.cache/${REPO_NAME}-repo"

mkdir -p "${LOCAL_PATH}"

## Sync remote DB to local ##
s3cmd sync "${REMOTE_PATH}/${REPO_NAME}.db.tar.xz"    "${LOCAL_PATH}/"
ln -sf      "${LOCAL_PATH}/${REPO_NAME}.db.tar.xz"    "${LOCAL_PATH}/$REPO_NAME.db"
s3cmd sync "${REMOTE_PATH}/${REPO_NAME}.files.tar.xz" "${LOCAL_PATH}/"
ln -sf      "${LOCAL_PATH}/${REPO_NAME}.files.tar.xz" "${LOCAL_PATH}/$REPO_NAME.files"

## Clean up older packages that may or may not have been deleted from the
## remote so that we do not reupload them
for _file in "${LOCAL_PATH}/"*.pkg.tar.xz ; do
    [ -f "${_file}" ] || break
    rm -f "${_file}"
done

# Run aursync on all arguments, and remove old if successful
for _arg in "${@}" ; do
    aursync --repo "$REPO_NAME" --root "$LOCAL_PATH" "${_arg}" &&
    s3cmd rm "${REMOTE_PATH}/${_arg}-*.pkg.tar.xz" || true
done

## Upload all the newly generated package files
for _file in "${LOCAL_PATH}/"*.pkg.tar.xz ; do
    [ -f "${_file}" ] || break
    s3cmd sync --follow-symlinks --acl-public "${_file}" "${REMOTE_PATH}/"
done

## Sync local database to remote
s3cmd sync --follow-symlinks --acl-public \
    "${LOCAL_PATH}/${REPO_NAME}.db"    "${LOCAL_PATH}/${REPO_NAME}.db.tar.xz" \
    "${LOCAL_PATH}/${REPO_NAME}.files" "${LOCAL_PATH}/${REPO_NAME}.files.tar.xz" \
    "${REMOTE_PATH}/"
